name: Daily Kayak Data Update
on:
  schedule:
    - cron: '0 9 * * *'  # Runs every day at 9:00 AM UTC
  workflow_dispatch:  # Allows manual trigger
  
jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo without token auth
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas scikit-learn
          
      - name: Run kayak data script
        run: python kayak_data_export.py
        
      - name: Debug - List created files
        run: |
          echo "Files in root directory:"
          ls -la
          echo "Files in data_exports directory:"
          ls -la data_exports/ || echo "data_exports directory not found"
          
      - name: Configure git to use PAT for pushing
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}
          
      - name: Check for changes
        id: check_changes
        run: |
          git add data_exports/
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi
          
      - name: Commit and push updates
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git commit -m "Automated update of kayak data files - $(date '+%Y-%m-%d %H:%M:%S UTC')"
          git push origin HEAD:${{ github.ref_name }}
          echo "✅ Successfully pushed kayak data updates"
          
      - name: No changes message
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "ℹ️ No changes to commit - data files are up to date"
